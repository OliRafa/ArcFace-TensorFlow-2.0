#docker run --gpus all -d -u $(id -u):$(id -g) -v $(pwd)/datasets:/app/datasets -v $(pwd)/logs:/app/logs -v $(pwd)/training_checkpoints:/app/training_checkpoints --name srfr arcfacetensorflow20
docker run --gpus all -d --privileged=true -v $(pwd)/datasets:/app/datasets -v $(pwd)/temp:/app/temp -v $(pwd)/logs:/app/logs -v $(pwd)/training_checkpoints:/app/training_checkpoints --name srfr srfr:novograd

# Train
docker run --gpus all -d --privileged=true -v $LOCAL_WORKSPACE_FOLDER/datasets:/app/datasets -v $LOCAL_WORKSPACE_FOLDER/data/temp:/app/data/temp -v $LOCAL_WORKSPACE_FOLDER/data/logs:/app/data/logs -v $LOCAL_WORKSPACE_FOLDER/data/training_checkpoints:/app/data/training_checkpoints --restart on-failure --name srfr srfr:novograd

# Validate
docker run --gpus all -d --privileged=true -v $LOCAL_WORKSPACE_FOLDER/data/datasets:/app/data/datasets -v $LOCAL_WORKSPACE_FOLDER/data/temp:/app/data/temp -v $LOCAL_WORKSPACE_FOLDER/data/logs:/app/data/logs -v $LOCAL_WORKSPACE_FOLDER/data/training_checkpoints:/app/data/training_checkpoints --restart on-failure --name srfr srfr:novograd

docker cp srfr:/app/train_logs.txt .

docker logs -f srfr 2>&1 | tee output.log